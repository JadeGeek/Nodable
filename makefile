CXXFLAGS=-g -Wall
#CXXFLAGS+= -DDEBUG #uncomment if you want to display all debug messages
CXXFLAGS+= -std=c++11
LDFLAGS=
EXECUTABLE=nodable

TARGET :=linux64

BINDIR :=bin/$(TARGET)
SRCDIR :=sources
OBJDIR :=build/$(TARGET)

SOURCES := $(wildcard $(SRCDIR)/*.cpp)
OBJECTS := $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SOURCES))
DEPENDENCIES := $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.d, $(SOURCES))

all: makeFolders dependencies $(EXECUTABLE)

include $(wildcard $(OBJDIR)/*.d)

$(EXECUTABLE): $(OBJECTS)
	$(CXX) -o $(BINDIR)/$(EXECUTABLE) $(OBJECTS) $(CXXFLAGS)

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp $(OBJDIR)/%.d
	$(CXX) -c $(CXXFLAGS) $< -o $@

# This target creates a makefile per *.cpp (with all dependencies automatically generated by the compiler with -MM flag)
$(OBJDIR)/%.d : $(SRCDIR)/%.cpp
	@set -e; rm -f $@; \
	$(CXX) -MM $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(OBJDIR)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

# A target to run the program
.PHONY: run
run: all
	$(EXECUTABLE)

.PHONY: dependencies
dependencies: $(DEPENDENCIES)

.PHONY: makeFolders
makeObjectAndBinaryFolders:
	mkdir -p $(OBJDIR)
	mkdir -p $(BINDIR)

.PHONY: install
install:
	@echo "Starting install..."	
	@cp $(BINDIR)/$(EXECUTABLE) /bin && echo "Install done ! type nodable to launch the program." || echo "ERROR : Try with sudo make install" && exit
		
.PHONY: clean
clean:
	rm -rf $(OBJECTS) $(DEPENDENCIES)

.PHONY: mrproper
mrproper: clean
	rm -rf $(EXEC)

